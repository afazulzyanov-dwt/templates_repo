{"name": "DataScienceSolara", "display_name": "Solara Based Project", "provisioner": "terraform", "description": "Template for a pure Python, React-style web applications based on Solara http://solara.dev", "deprecated": false, "deprecation_message": "", "icon": "/emojis/1f31e.png", "default_ttl_ms": 0, "activity_bump_ms": 3600000, "autostop_requirement": {"days_of_week": [], "weeks": 1}, "autostart_requirement": {"days_of_week": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "created_by_id": "75f827f2-7dc5-404f-959d-891d813417ed", "created_by_name": "ArkadyGurevich", "allow_user_autostart": true, "allow_user_autostop": true, "allow_user_cancel_workspace_jobs": false, "failure_ttl_ms": 0, "time_til_dormant_ms": 0, "time_til_dormant_autodelete_ms": 0, "require_active_version": false, "max_port_share_level": "owner", "version": {"archived": false, "message": "", "name": "serene_neumann4", "readme": "---\ndisplay_name: Solara Based Project\ndescription: Solara Template for Coder\nicon: ../../../site/static/emojis/1f4e6.png\nmaintainer_github: digitalwavetechnology\ntags: []\n---\n# Solara-Based Project Documentation\n\n## Overview\n\nThis documentation provides a comprehensive guide to setting up and running a Solara-based project. The process involves cloning a Git repository, installing necessary dependencies, configuring environment variables, and launching the server using Uvicorn.\n\n## Workflow\n\nThe setup and execution of the project startup script makes following steps:\n\n1. **Clone the Git Repository**:\n    - The script clones the Git repository using the provided credentials and a specified git tag.\n    - If a git tag is not provided, the script clones the repository to the most recent commit on the `main` branch.\n\n2. **Install Dependencies**:\n    - The script installs the necessary dependencies by running the command:\n      ```bash\n      pip install -r {repository}/requirements.txt\n      ```\n\n3. **Setup `SOLARA_APP` Environment Variable**:\n    - Set the `SOLARA_APP` environment variable based on your project structure. For example:\n      ```bash\n      export SOLARA_APP=main.ipynb\n      ```\n\n4. **Run Uvicorn Server**:\n    - The script starts the Uvicorn server with the following flags:\n      ```bash\n      uvicorn --reload-dir ./ --reload-include \"*.*\" --reload-exclude=*checkpoint.ipynb --reload\n      ```\n\n## Solara Project Structure\n\nA typical Solara project structure includes the following files:\n\n\n{repository}\n- \u251c\u2500\u2500 main.ipynb               # Mandatory file\n- \u2514\u2500\u2500 requirements.txt         # Optional file\n\n### Notes\n\n- `main.ipynb` is mandatory and serves as the entry point of the application.\n- `requirements.txt` is optional but recommended for managing dependencies.\n\n", "user_variable_values": [{"name": "use_kubeconfig", "description": "Use host kubeconfig? (true/false)\n\nSet this to false if the Coder host is itself running as a Pod on the same\nKubernetes cluster as you are deploying workspaces to.\n\nSet this to true if the Coder host is running outside the Kubernetes cluster\nfor workspaces.  A valid \"~/.kube/config\" must be present on the Coder host.\n", "type": "bool", "value": "false", "default_value": "false", "required": false, "sensitive": false}, {"name": "namespace", "description": "The Kubernetes namespace to create workspaces in (must exist prior to creating workspaces). If the Coder host is itself running as a Pod on the same Kubernetes cluster as you are deploying workspaces to, set this to the same namespace.", "type": "string", "value": "testprojecttf", "default_value": "", "required": true, "sensitive": false}, {"name": "customer", "description": "", "type": "string", "value": "", "default_value": "", "required": false, "sensitive": false}, {"name": "COOKIE_SESSION_NAME", "description": "", "type": "string", "value": "", "default_value": "", "required": false, "sensitive": false}]}}